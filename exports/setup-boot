#!/bin/bash

function repro.require_file {
    file=$1
    source=$2
    if [[ ! -f ${file} ]] ; then
        if [[ ${source} == http?:* ]] ; then
            curl -f -L ${source}/${file} -o ${file}
        else
            cp ${source}/${file} ${file}
        fi
    fi 
}

# 
repro_builder_release=${1:-/repro/exports}

# save the path to the original build directory
export REPRO_EXPORTS_DIR=$(readlink -f $(dirname $0))

export REPRO_ROOT_DIR=$(readlink -f $(dirname ${REPRO_EXPORTS_DIR}))

# work in the repro-boot subdirectory of the bootstrap directory
repro_boot_dir=${REPRO_ROOT_DIR}/repro-boot
mkdir -p ${repro_boot_dir}
cd ${repro_boot_dir}

# install curl so that builders can be downloaded
apt-get -y update
apt-get -y install curl

# download the list of builders
boot_manifest="manifest-boot"
repro.require_file ${boot_manifest} ${repro_builder_release}

# process each line in the builders manifest
readarray lines < ${boot_manifest}
for full_line in "${lines[@]}"
do
    # parse the builder name from the non-comment portion of the line
    trimmed_line=${full_line%%#*}
    read -ra tokens <<< ${trimmed_line}
    builder=${tokens[0]}
    repro.require_file ${builder} ${repro_builder_release}
done

# invoke each sequenced builder within the current shell
for builder in [0-9]*; do
    source $builder
done

